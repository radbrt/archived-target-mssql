name: Target MSSQL tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.python-version }}'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.14
    - name: Install dependencies
      run: |
        poetry install
    - name: Run lint command from tox.ini
      run: |
        poetry run tox -e lint
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.python-version }}'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.11
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest --capture=no
  integration:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: P@55w0rd
          ACCEPT_EULA: "Y"
          MSSQL_PID: "Express"
        ports:
          - 1433:1433
    env:
      python-version: "3.8"  
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install meltano
        meltano install 
    - name: smoke-test-tap
      run: meltano run tap-smoke-test target-postgres